[init]
  defaultBranch = main

[user]
  name = Marcelo F Andrade
  email = mfandrade@gmail.com
  signingkey = 608DE262EFB14FE3

[commit]
  gpgSign = false

[core]
  editor = vim

[diff]
  external = difft --display side-by-side --syntax-highlight off

[alias]
  # ----------------------------------------
  br = branch
  bra = branch --all
  brd = branch --delete
  brD = branch -D
  brm = branch --move
  bru = branch --set-upstream-to

  # ----------------------------------------
  uncommit = reset --soft HEAD~1
  com = commit
  comm = commit --message
  comra = commit --reset-author
  ; addcom = commit --all
  allcomm = commit --all --message
  a = commit --amend
  amend = commit --amend
  am = commit --amend --message
  ane = commit --amend --no-edit

  # ----------------------------------------
  s = status
  ss = status --ignored=matching --untracked-files=all
  st = status --short

  # ----------------------------------------
  co = checkout
  cob = checkout -b
  discard = checkout
  discard-all = checkout .

  # ----------------------------------------
  d = diff
  cached = diff --cached
  staged = diff --staged

  # ----------------------------------------
  unadd = restore --staged
  stage = add
  unstage = restore --staged
  patch = add --patch

  # ----------------------------------------
  hist = log --pretty=format:\"%C(yellow)%h%C(reset)%C(magenta)%d %C(white)%s %C(blue)[%al]  %C(black)%ar%C(reset)\" --ext-diff
  last = log --pretty=format:\"%C(yellow)%h%C(reset)%C(magenta)%d %C(white)%s %C(blue)[%al]  %C(black)%ar%C(reset)\" --ext-diff -1 --stat
  ls = log --pretty=format:\"%h | %as | %al | %s%d\" --ext-diff

  # ----------------------------------------
  r = remote
  rv = remote --verbose
  rls = remote --verbose
  rem = remote --verbose
  radd = remote add
  rdel = remote rm
	sync = "!f() { CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD); git pull 2>/dev/null; if [ $? -ne 0 ]; then PULL_OUTPUT=$(git pull 2>&1); if echo \"$PULL_OUTPUT\" | grep -q \"There is no tracking information for the current branch\"; then git branch --set-upstream-to=origin/\"$CURRENT_BRANCH\" \"$CURRENT_BRANCH\" && git pull; else echo \"$PULL_OUTPUT\"; return 1; fi; fi; git push; if [ $? -ne 0 ]; then git push -u origin \"$CURRENT_BRANCH\"; if [ $? -ne 0 ]; then return 1; fi; fi; }; f"

  # ----------------------------------------

[pull]
  rebase = true

[include]
  path = ~/.gitconfig.extra
[push]
	autoSetupRemote = true
