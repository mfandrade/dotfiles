# vim: fdm=marker fmr=<<<,>>> foldlevel=0 ts=4 sts=4 sw=4 noet
unbind R
bind R source-file ~/.tmux.conf \; display-message "File tmux.conf reloaded"

set -g prefix C-a			# A more ergonomic prefix
set -g mouse on				# It won't hurt, right?
set -g base-index 1			# Start windows and panes at 1, not 0
setw -g pane-base-index 1
set -g default-terminal "tmux-256color"	# It's nice to have colours
# set-option -g status-position top		# It may be overriden by some themes

unbind &					# Unnintuitive
bind-key x kill-pane		# Confirmation dialog is annoying
bind-key X confirm-before -p "Kill this window #P? (y/n)" kill-window

unbind '"'					# Better split keys
unbind %
bind-key | split-window -h
bind-key \\ split-window -fh
bind-key - split-window -v
bind-key _ split-window -fv

unbind C-s					# <prefix>C-s to synchronize panes
bind-key -n C-s set-window-option synchronize-panes\; display-message "Panes sync #{?pane_synchronized,on,off}"

set -g repeat-time 500		# Easier to resize panes (with M-<arrows>)

setw -g mode-keys vi		# Vim keys in copy mode

# vim-tmux-navigator <<<
vim_pattern='(\S+/)?g?\.?(view|l?n?vim?x?|fzf)(diff)?(-wrapped)?'
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +${vim_pattern}$'"
bind-key -n 'C-h' if-shell "$is_vim" { send-keys C-h } { if-shell -F '#{pane_at_left}'   {} { select-pane -L } }
bind-key -n 'C-j' if-shell "$is_vim" { send-keys C-j } { if-shell -F '#{pane_at_bottom}' {} { select-pane -D } }
bind-key -n 'C-k' if-shell "$is_vim" { send-keys C-k } { if-shell -F '#{pane_at_top}'    {} { select-pane -U } }
bind-key -n 'C-l' if-shell "$is_vim" { send-keys C-l } { if-shell -F '#{pane_at_right}'  {} { select-pane -R } }
bind-key -T copy-mode-vi 'C-h' if-shell -F '#{pane_at_left}'   {} { select-pane -L }
bind-key -T copy-mode-vi 'C-j' if-shell -F '#{pane_at_bottom}' {} { select-pane -D }
bind-key -T copy-mode-vi 'C-k' if-shell -F '#{pane_at_top}'    {} { select-pane -U }
bind-key -T copy-mode-vi 'C-l' if-shell -F '#{pane_at_right}'  {} { select-pane -R } # >>>

# Automatically rename session to a random name upon creation or attach
set-hook -g session-created 'run-shell "tmux rename-session -t #{session_name} \"$(~/bin/random-name.sh)\""'

# #############################################################################
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'niksingh710/minimal-tmux-status' # <<<
set -g @minimal-tmux-status 'top'
set -g @minimal-tmux-justify 'left'
set -g @minimal-tmux-indicator false
set -g @minimal-tmux-use-arrow true
set -g @minimal-tmux-left-arrow ' '
set -g @minimal-tmux-right-arrow 'î‚¸'
set -g @minimal-tmux-status-left ''
set -g @minimal-tmux-status-right '[#S]'
# >>>


# #############################################################################
run '~/.tmux/plugins/tpm/tpm' # don't forget to clone it to the right dir
